// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// === cancellationPolicy.prisma ===
model CancellationPolicy {
    id                              String                  @id     @default(cuid())
    property                        Property                @relation(fields: [propertyId], references: [id])
    propertyId                      String 
    policyName                      String
    description                     String?

    @@index([propertyId], map: "idx_cancellationpolicy_propertyId")
}

// === channel.prisma ===
model Channel {
    id                              Int                         @id
    name                            String                      @unique
    displayName                     String 
    reviews                         Review[]

    @@index([name], map: "idx_channel_name")
}

// === enums.prisma ===
enum ReviewSource {
    HOSTAWAY
    GOOGLE
    OTHER
}

// === houseRule.prisma ===
model HouseRule {
    id                              String                  @id   @default(cuid())
    property                        Property                @relation(fields: [propertyId], references: [id])
    propertyId                      String
    rule                            String

     @@index([propertyId], map: "idx_houserule_propertyId")
}

// === property.prisma ===
model Property {
    id                                                  String                      @id         @default(cuid())
    googlePlaceId                                       String?
    name                                                String 
    listingId                                           Int                         @unique
    externalListingName                                 String
    internalListingName                                 String                      @unique
    description                                         String 
    address                                             String
    city                                                String
    country                                             String
    zipcode                                             String
    latitude                                            Float
    longitude                                           Float 
    guests                                              Int
    bedrooms                                            Int 
    bathrooms                                           Int
    beds                                                Int
    checkInTime                                         String 
    checkOutTime                                        String 
    price                                               Float
                
    images                                              PropertyImage[]
    amenities                                           PropertyAmenity[]
    houseRules                                          HouseRule[]
    cancellationPolicies                                CancellationPolicy[]
    reviews                                             Review[]
                  
    createdAt                                           DateTime                        @default(now())
    updatedAt                                           DateTime                        @updatedAt


    @@index([googlePlaceId], map: "idx_property_googlePlaceId")
    @@index([internalListingName], map: "idx_property_internalListingName")
    @@index([latitude], map: "idx_property_latitude")
    @@index([longitude], map: "idx_property_longitude")
    @@index([listingId], map: "idx_property_listingId")
}               

// === propertyAmenity.prisma ===
model PropertyAmenity {
    id                          String          @id     @default(cuid())
    property                    Property        @relation(fields: [propertyId], references: [id])
    propertyId                  String
    name                        String 

    @@index([propertyId], map: "idx_propertyamenity_propertyId")
}

// === propertyImage.prisma ===
model PropertyImage {
    id                              String              @id     @default(cuid())
    property                        Property            @relation(fields: [propertyId], references: [id])
    propertyId                      String
    url                             String 
    caption                         String?
    sortOrder                       Int?

    @@index([propertyId], map: "idx_propertyimage_propertyId")
}

// === review.prisma ===
model Review {
    id                                  String                                  @id     @default(cuid())
    property                            Property                                @relation(fields: [propertyId], references: [id])
    propertyId                          String
    source                              ReviewSource
    sourceReviewId                      String                                 @unique
    type                                String
    channel                             Channel                                @relation(fields: [channelId], references: [id])
    channelId                           Int
    rating                              Int
    authorName                          String
    authorAvatarUrl                     String?
    content                             String
    status                              String
    ratingOriginal                      Int?
    reviewCategory                      ReviewCategory[]
    raw                                 String
    createdAt                           DateTime                                @default(now())
    updatedAt                           DateTime                                @updatedAt

    @@index([propertyId], map: "idx_review_propertyId")
    @@index([channelId], map: "idx_review_channelId")
    @@index([type], map: "idx_review_type")
    @@index([source], map: "idx_review_source")
    @@index([sourceReviewId], map: "idx_review_sourceReviewId")
    @@index([createdAt], map: "idx_review_createdAt")
    @@unique([source, sourceReviewId])
}

// === reviewCategory.prisma ===
model ReviewCategory {
    id                                      String                  @id  @default(cuid())
    review                                  Review                  @relation(fields: [reviewId], references: [id])
    reviewId                                String                 
    categoryName                            String
    score                                   Int

    @@index([reviewId], map: "idx_reviewcategory_reviewId")
    @@unique([reviewId, categoryName])
}